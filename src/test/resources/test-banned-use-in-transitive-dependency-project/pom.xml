<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>test</groupId>
    <artifactId>integration-test-parent</artifactId>
    <relativePath>..</relativePath>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>test-banned-use-in-transitive-dependency-project</artifactId>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <packaging>pom</packaging>
  <name>Test that banned use in transitive dependency found.</name>

  <modules>
    <module>depended-upon</module>
    <module>depends-upon-sibling</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.google.security</groupId>
            <artifactId>fences-maven-enforcer-rule</artifactId>
            <version>${project-under-test.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>enforce</id>
            <phase>verify</phase>
            <configuration>
              <rules>
                <fences
                 implementation="com.google.security.fences.FencesMavenEnforcerRule">
                  <package>
                    <name>java.lang</name>
                    <class>
                      <name>Runtime</name>
                      <distrusts>*</distrusts>
                      <rationale>
                        Code that uses ${fences.api}
                        to execute shell scripts or check environment variables
                        will probably break when we move to new hosting.

                        The folk at migration-team@ are happy to help find ways
                        to do things that have previously done via shell callouts.
                      </rationale>
                      <method>
                        <name>gc</name>
                        <trusts>*</trusts>
                      </method>
                    </class>
                  </package>
                </fences>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
